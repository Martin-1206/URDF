<?xml version="1.0"?>

<robot>

  <!-- Gazebo Plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Implement Colors -->
  <gazebo reference="camera_link">
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="box">
    <material>Gazebo/Blue</material>
  </gazebo>

<!-- For every non-fixed joint transmission must be specified, which tells Gazebo what to do with the joint -->
  <transmission name="rightf_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rightf_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_front_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="leftf_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="leftf_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_front_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="rightb_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rightb_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_back_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="leftb_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="leftb_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_back_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="neck_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$neck_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="neck">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="gripper_extension_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="gripper_extension_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="gripper_extension">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="left_gripper_joint_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_gripper_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_gripper_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="right_gripper_joint_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_gripper_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_gripper_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>


<!-- Links which interact physically with Gazebo, additional information about the material must be specified -->
  <gazebo reference="right_front_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="left_front_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="right_back_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="left_back_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo> 

<!-- Gazebo Camera Plugin -->
  <gazebo reference="camera_link">  <!-- also link name, need to give more specific name to test -->
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>MartinBot/camera1</cameraName>    <!-- the left name must be the name of the robot-->
        <imageTopicName>image_raw</imageTopicName>   <!-- this is the topic name where the image is published to-->
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>        <!-- i think is the link name-->       
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>